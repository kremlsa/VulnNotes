stages:
  - cloc_report
  - deploy

generate_cloc_report:
  stage: cloc_report
  image: python:3.12-slim
  before_script:
    - apt-get update && apt-get install -y cloc curl
  script:
    - mkdir -p public
    - cloc . --exclude-dir=.git --json --out=public/cloc-report.json
    - |
      cat <<EOF > public/index.html
      <!DOCTYPE html>
      <html lang="ru">
      <head>
        <meta charset="UTF-8">
        <title>Статистика проекта</title>
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <style>
          body { font-family: Arial, sans-serif; padding: 20px; }
          h1 { text-align: center; }
          canvas { max-width: 600px; margin: 20px auto; display: block; }
          table { width: 100%; border-collapse: collapse; margin-top: 40px; }
          th, td { border: 1px solid #ddd; padding: 8px; text-align: center; }
          th { background-color: #f2f2f2; }
        </style>
      </head>
      <body>
        <h1>Отчёт о строках кода (CLOC)</h1>
        <canvas id="clocChart"></canvas>
        <table id="clocTable">
          <thead>
            <tr><th>Язык</th><th>Файлы</th><th>Код</th><th>Комментарии</th><th>Пустые строки</th></tr>
          </thead>
          <tbody></tbody>
        </table>

        <script>
          async function loadClocData() {
            const response = await fetch("cloc-report.json");
            const data = await response.json();
            const labels = [];
            const codeLines = [];
            const tableBody = document.getElementById("clocTable").querySelector("tbody");

            for (const [lang, stats] of Object.entries(data)) {
              if (lang === "header") continue;
              labels.push(lang);
              codeLines.push(stats.code);

              const row = tableBody.insertRow();
              row.insertCell(0).textContent = lang;
              row.insertCell(1).textContent = stats.nFiles;
              row.insertCell(2).textContent = stats.code;
              row.insertCell(3).textContent = stats.comment;
              row.insertCell(4).textContent = stats.blank;
            }

            new Chart(document.getElementById("clocChart"), {
              type: "doughnut",
              data: {
                labels: labels,
                datasets: [{
                  data: codeLines,
                  backgroundColor: labels.map(() => `hsl(${Math.random()*360}, 70%, 60%)`)
                }]
              },
              options: {
                responsive: true,
                plugins: {
                  legend: { position: "bottom" },
                  title: { display: true, text: "Количество строк кода по языкам" }
                }
              }
            });
          }

          loadClocData();
        </script>
      </body>
      </html>
      EOF
  artifacts:
    paths:
      - public
    expire_in: 1 week

pages:
  stage: deploy
  script:
    - echo "Deploying to GitLab Pages..."
  artifacts:
    paths:
      - public
  only:
    - main
    - master
